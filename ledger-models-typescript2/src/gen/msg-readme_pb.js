"use strict";
// @generated by protoc-gen-es v1.6.0 with parameter "target=ts"
// @generated from file msg-readme.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Person = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * A very simple protobuf message.
 *
 * @generated from message Person
 */
class Person extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string name = 1;
         */
        this.name = "";
        /**
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: int32 years = 3 [json_name = "baz"];
         */
        this.years = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Person().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Person().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Person().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Person, a, b);
    }
}
exports.Person = Person;
Person.runtime = protobuf_1.proto3;
Person.typeName = "Person";
Person.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "years", jsonName: "baz", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
]);
//# sourceMappingURL=msg-readme_pb.js.map