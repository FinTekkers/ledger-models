name: Publish Java package to Maven Central Packages
on:
  push:
    tags:  #only trigger action when tagged with release number, i.e v0.0.1     
      - 'v*'    
  workflow_dispatch:
  
defaults:
  run:
    shell: bash
    working-directory: ledger-models-java

jobs:
  publish-java-package:
    runs-on: ubuntu-latest 
    permissions: 
      contents: read
      packages: write 
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
         java-version: '18'
         distribution: 'adopt'
    - name: Get git tag extension
      id: tag
      uses: dawidd6/action-get-tag@v1
    - name: Release details
      run: |
        echo Release tag ${{ steps.tag.outputs.tag }}
        TAG=${{ steps.tag.outputs.tag }}
        echo tag is ${TAG}
        VERSION=${TAG#v}
        echo version is ${VERSION}
        echo "release_version=${VERSION}" >> $GITHUB_ENV

    - name: Setup GPG
      run: |
        # Create GPG directory
        mkdir -p ~/.gnupg/
        chmod 700 ~/.gnupg
        
        # Import GPG keys
        echo "${{ secrets.GPG_PUBLIC_KEY }}" | gpg --import
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --import
        
        # Trust GPG key
        KEY_ID=$(gpg --list-secret-keys --keyid-format LONG | grep sec | cut -d'/' -f2 | cut -d' ' -f1)
        echo -e "5\ny\n" | gpg --command-fd 0 --expert --edit-key $KEY_ID trust
    - name: Print Environment Variables
      run: env
    - name: Execute Gradle build
      run: |
        echo "GPG Public Key: ${JRELEASER_GPG_PUBLIC_KEY:0:50}..."
        echo "GPG Secret Key: ${JRELEASER_GPG_SECRET_KEY:0:50}..."
        echo "GPG Passphrase: $JRELEASER_GPG_PASSPHRASE"
        echo "Sonatype Username: $JRELEASER_DEPLOY_MAVEN_NEXUS2_MAVEN_CENTRAL_USERNAME"
        echo "Sonatype Password: $JRELEASER_DEPLOY_MAVEN_NEXUS2_MAVEN_CENTRAL_PASSWORD"
        ./gradlew publish jreleaserDeploy
      env:
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
        JRELEASER_DEPLOY_MAVEN_MAVENCENTRAL_SONATYPE_USERNAME: ${{ secrets.JRELEASER_DEPLOY_MAVEN_MAVENCENTRAL_SONATYPE_USERNAME }}
        JRELEASER_DEPLOY_MAVEN_MAVENCENTRAL_SONATYPE_PASSWORD: ${{ secrets.JRELEASER_DEPLOY_MAVEN_MAVENCENTRAL_SONATYPE_PASSWORD }}
        run_number: ${{ env.release_version }}
        
