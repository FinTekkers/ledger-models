// source: fintekkers/models/transaction/transaction.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.exportSymbol('proto.fintekkers.models.transaction.TransactionProto', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fintekkers.models.transaction.TransactionProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fintekkers.models.transaction.TransactionProto.repeatedFields_, null);
};
goog.inherits(proto.fintekkers.models.transaction.TransactionProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fintekkers.models.transaction.TransactionProto.displayName = 'proto.fintekkers.models.transaction.TransactionProto';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fintekkers.models.transaction.TransactionProto.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.toObject = function(opt_includeInstance) {
  return proto.fintekkers.models.transaction.TransactionProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fintekkers.models.transaction.TransactionProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintekkers.models.transaction.TransactionProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectClass: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uuid: (f = msg.getUuid()) && proto.fintekkers.models.util.UUIDProto.toObject(includeInstance, f),
    asOf: (f = msg.getAsOf()) && proto.fintekkers.models.util.LocalTimestampProto.toObject(includeInstance, f),
    isLink: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    validFrom: (f = msg.getValidFrom()) && proto.fintekkers.models.util.LocalTimestampProto.toObject(includeInstance, f),
    validTo: (f = msg.getValidTo()) && proto.fintekkers.models.util.LocalTimestampProto.toObject(includeInstance, f),
    portfolio: (f = msg.getPortfolio()) && proto.fintekkers.models.portfolio.PortfolioProto.toObject(includeInstance, f),
    security: (f = msg.getSecurity()) && proto.fintekkers.models.security.SecurityProto.toObject(includeInstance, f),
    transactionType: jspb.Message.getFieldWithDefault(msg, 12, 0),
    quantity: (f = msg.getQuantity()) && proto.fintekkers.models.util.DecimalValueProto.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && proto.fintekkers.models.price.PriceProto.toObject(includeInstance, f),
    tradeDate: (f = msg.getTradeDate()) && proto.fintekkers.models.util.LocalDateProto.toObject(includeInstance, f),
    settlementDate: (f = msg.getSettlementDate()) && proto.fintekkers.models.util.LocalDateProto.toObject(includeInstance, f),
    childtransactionsList: jspb.Message.toObjectList(msg.getChildtransactionsList(),
    proto.fintekkers.models.transaction.TransactionProto.toObject, includeInstance),
    positionStatus: jspb.Message.getFieldWithDefault(msg, 25, 0),
    tradeName: jspb.Message.getFieldWithDefault(msg, 26, ""),
    strategyAllocation: (f = msg.getStrategyAllocation()) && proto.fintekkers.models.strategy.StrategyAllocationProto.toObject(includeInstance, f),
    isCancelled: jspb.Message.getBooleanFieldWithDefault(msg, 30, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fintekkers.models.transaction.TransactionProto}
 */
proto.fintekkers.models.transaction.TransactionProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fintekkers.models.transaction.TransactionProto;
  return proto.fintekkers.models.transaction.TransactionProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fintekkers.models.transaction.TransactionProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fintekkers.models.transaction.TransactionProto}
 */
proto.fintekkers.models.transaction.TransactionProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectClass(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 5:
      var value = new proto.fintekkers.models.util.UUIDProto;
      reader.readMessage(value,proto.fintekkers.models.util.UUIDProto.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 6:
      var value = new proto.fintekkers.models.util.LocalTimestampProto;
      reader.readMessage(value,proto.fintekkers.models.util.LocalTimestampProto.deserializeBinaryFromReader);
      msg.setAsOf(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLink(value);
      break;
    case 8:
      var value = new proto.fintekkers.models.util.LocalTimestampProto;
      reader.readMessage(value,proto.fintekkers.models.util.LocalTimestampProto.deserializeBinaryFromReader);
      msg.setValidFrom(value);
      break;
    case 9:
      var value = new proto.fintekkers.models.util.LocalTimestampProto;
      reader.readMessage(value,proto.fintekkers.models.util.LocalTimestampProto.deserializeBinaryFromReader);
      msg.setValidTo(value);
      break;
    case 10:
      var value = new proto.fintekkers.models.portfolio.PortfolioProto;
      reader.readMessage(value,proto.fintekkers.models.portfolio.PortfolioProto.deserializeBinaryFromReader);
      msg.setPortfolio(value);
      break;
    case 11:
      var value = new proto.fintekkers.models.security.SecurityProto;
      reader.readMessage(value,proto.fintekkers.models.security.SecurityProto.deserializeBinaryFromReader);
      msg.setSecurity(value);
      break;
    case 12:
      var value = /** @type {!proto.fintekkers.models.transaction.TransactionTypeProto} */ (reader.readEnum());
      msg.setTransactionType(value);
      break;
    case 13:
      var value = new proto.fintekkers.models.util.DecimalValueProto;
      reader.readMessage(value,proto.fintekkers.models.util.DecimalValueProto.deserializeBinaryFromReader);
      msg.setQuantity(value);
      break;
    case 14:
      var value = new proto.fintekkers.models.price.PriceProto;
      reader.readMessage(value,proto.fintekkers.models.price.PriceProto.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 15:
      var value = new proto.fintekkers.models.util.LocalDateProto;
      reader.readMessage(value,proto.fintekkers.models.util.LocalDateProto.deserializeBinaryFromReader);
      msg.setTradeDate(value);
      break;
    case 16:
      var value = new proto.fintekkers.models.util.LocalDateProto;
      reader.readMessage(value,proto.fintekkers.models.util.LocalDateProto.deserializeBinaryFromReader);
      msg.setSettlementDate(value);
      break;
    case 20:
      var value = new proto.fintekkers.models.transaction.TransactionProto;
      reader.readMessage(value,proto.fintekkers.models.transaction.TransactionProto.deserializeBinaryFromReader);
      msg.addChildtransactions(value);
      break;
    case 25:
      var value = /** @type {!proto.fintekkers.models.position.PositionStatusProto} */ (reader.readEnum());
      msg.setPositionStatus(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeName(value);
      break;
    case 27:
      var value = new proto.fintekkers.models.strategy.StrategyAllocationProto;
      reader.readMessage(value,proto.fintekkers.models.strategy.StrategyAllocationProto.deserializeBinaryFromReader);
      msg.setStrategyAllocation(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCancelled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fintekkers.models.transaction.TransactionProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fintekkers.models.transaction.TransactionProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintekkers.models.transaction.TransactionProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectClass();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.fintekkers.models.util.UUIDProto.serializeBinaryToWriter
    );
  }
  f = message.getAsOf();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.fintekkers.models.util.LocalTimestampProto.serializeBinaryToWriter
    );
  }
  f = message.getIsLink();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getValidFrom();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.fintekkers.models.util.LocalTimestampProto.serializeBinaryToWriter
    );
  }
  f = message.getValidTo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.fintekkers.models.util.LocalTimestampProto.serializeBinaryToWriter
    );
  }
  f = message.getPortfolio();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.fintekkers.models.portfolio.PortfolioProto.serializeBinaryToWriter
    );
  }
  f = message.getSecurity();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.fintekkers.models.security.SecurityProto.serializeBinaryToWriter
    );
  }
  f = message.getTransactionType();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getQuantity();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.fintekkers.models.util.DecimalValueProto.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.fintekkers.models.price.PriceProto.serializeBinaryToWriter
    );
  }
  f = message.getTradeDate();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.fintekkers.models.util.LocalDateProto.serializeBinaryToWriter
    );
  }
  f = message.getSettlementDate();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.fintekkers.models.util.LocalDateProto.serializeBinaryToWriter
    );
  }
  f = message.getChildtransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.fintekkers.models.transaction.TransactionProto.serializeBinaryToWriter
    );
  }
  f = message.getPositionStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      25,
      f
    );
  }
  f = message.getTradeName();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getStrategyAllocation();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.fintekkers.models.strategy.StrategyAllocationProto.serializeBinaryToWriter
    );
  }
  f = message.getIsCancelled();
  if (f) {
    writer.writeBool(
      30,
      f
    );
  }
};


/**
 * optional string object_class = 1;
 * @return {string}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getObjectClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.setObjectClass = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional fintekkers.models.util.UUIDProto uuid = 5;
 * @return {?proto.fintekkers.models.util.UUIDProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getUuid = function() {
  return /** @type{?proto.fintekkers.models.util.UUIDProto} */ (
    jspb.Message.getWrapperField(this, proto.fintekkers.models.util.UUIDProto, 5));
};


/**
 * @param {?proto.fintekkers.models.util.UUIDProto|undefined} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional fintekkers.models.util.LocalTimestampProto as_of = 6;
 * @return {?proto.fintekkers.models.util.LocalTimestampProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getAsOf = function() {
  return /** @type{?proto.fintekkers.models.util.LocalTimestampProto} */ (
    jspb.Message.getWrapperField(this, proto.fintekkers.models.util.LocalTimestampProto, 6));
};


/**
 * @param {?proto.fintekkers.models.util.LocalTimestampProto|undefined} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setAsOf = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearAsOf = function() {
  return this.setAsOf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.hasAsOf = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool is_link = 7;
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getIsLink = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.setIsLink = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional fintekkers.models.util.LocalTimestampProto valid_from = 8;
 * @return {?proto.fintekkers.models.util.LocalTimestampProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getValidFrom = function() {
  return /** @type{?proto.fintekkers.models.util.LocalTimestampProto} */ (
    jspb.Message.getWrapperField(this, proto.fintekkers.models.util.LocalTimestampProto, 8));
};


/**
 * @param {?proto.fintekkers.models.util.LocalTimestampProto|undefined} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setValidFrom = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearValidFrom = function() {
  return this.setValidFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.hasValidFrom = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional fintekkers.models.util.LocalTimestampProto valid_to = 9;
 * @return {?proto.fintekkers.models.util.LocalTimestampProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getValidTo = function() {
  return /** @type{?proto.fintekkers.models.util.LocalTimestampProto} */ (
    jspb.Message.getWrapperField(this, proto.fintekkers.models.util.LocalTimestampProto, 9));
};


/**
 * @param {?proto.fintekkers.models.util.LocalTimestampProto|undefined} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setValidTo = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearValidTo = function() {
  return this.setValidTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.hasValidTo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional fintekkers.models.portfolio.PortfolioProto portfolio = 10;
 * @return {?proto.fintekkers.models.portfolio.PortfolioProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getPortfolio = function() {
  return /** @type{?proto.fintekkers.models.portfolio.PortfolioProto} */ (
    jspb.Message.getWrapperField(this, proto.fintekkers.models.portfolio.PortfolioProto, 10));
};


/**
 * @param {?proto.fintekkers.models.portfolio.PortfolioProto|undefined} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setPortfolio = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearPortfolio = function() {
  return this.setPortfolio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.hasPortfolio = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional fintekkers.models.security.SecurityProto security = 11;
 * @return {?proto.fintekkers.models.security.SecurityProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getSecurity = function() {
  return /** @type{?proto.fintekkers.models.security.SecurityProto} */ (
    jspb.Message.getWrapperField(this, proto.fintekkers.models.security.SecurityProto, 11));
};


/**
 * @param {?proto.fintekkers.models.security.SecurityProto|undefined} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setSecurity = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearSecurity = function() {
  return this.setSecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.hasSecurity = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional TransactionTypeProto transaction_type = 12;
 * @return {!proto.fintekkers.models.transaction.TransactionTypeProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getTransactionType = function() {
  return /** @type {!proto.fintekkers.models.transaction.TransactionTypeProto} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.fintekkers.models.transaction.TransactionTypeProto} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.setTransactionType = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional fintekkers.models.util.DecimalValueProto quantity = 13;
 * @return {?proto.fintekkers.models.util.DecimalValueProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getQuantity = function() {
  return /** @type{?proto.fintekkers.models.util.DecimalValueProto} */ (
    jspb.Message.getWrapperField(this, proto.fintekkers.models.util.DecimalValueProto, 13));
};


/**
 * @param {?proto.fintekkers.models.util.DecimalValueProto|undefined} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setQuantity = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearQuantity = function() {
  return this.setQuantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional fintekkers.models.price.PriceProto price = 14;
 * @return {?proto.fintekkers.models.price.PriceProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getPrice = function() {
  return /** @type{?proto.fintekkers.models.price.PriceProto} */ (
    jspb.Message.getWrapperField(this, proto.fintekkers.models.price.PriceProto, 14));
};


/**
 * @param {?proto.fintekkers.models.price.PriceProto|undefined} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional fintekkers.models.util.LocalDateProto trade_date = 15;
 * @return {?proto.fintekkers.models.util.LocalDateProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getTradeDate = function() {
  return /** @type{?proto.fintekkers.models.util.LocalDateProto} */ (
    jspb.Message.getWrapperField(this, proto.fintekkers.models.util.LocalDateProto, 15));
};


/**
 * @param {?proto.fintekkers.models.util.LocalDateProto|undefined} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setTradeDate = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearTradeDate = function() {
  return this.setTradeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.hasTradeDate = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional fintekkers.models.util.LocalDateProto settlement_date = 16;
 * @return {?proto.fintekkers.models.util.LocalDateProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getSettlementDate = function() {
  return /** @type{?proto.fintekkers.models.util.LocalDateProto} */ (
    jspb.Message.getWrapperField(this, proto.fintekkers.models.util.LocalDateProto, 16));
};


/**
 * @param {?proto.fintekkers.models.util.LocalDateProto|undefined} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setSettlementDate = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearSettlementDate = function() {
  return this.setSettlementDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.hasSettlementDate = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated TransactionProto childTransactions = 20;
 * @return {!Array<!proto.fintekkers.models.transaction.TransactionProto>}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getChildtransactionsList = function() {
  return /** @type{!Array<!proto.fintekkers.models.transaction.TransactionProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fintekkers.models.transaction.TransactionProto, 20));
};


/**
 * @param {!Array<!proto.fintekkers.models.transaction.TransactionProto>} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setChildtransactionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.fintekkers.models.transaction.TransactionProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fintekkers.models.transaction.TransactionProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.addChildtransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.fintekkers.models.transaction.TransactionProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearChildtransactionsList = function() {
  return this.setChildtransactionsList([]);
};


/**
 * optional fintekkers.models.position.PositionStatusProto position_status = 25;
 * @return {!proto.fintekkers.models.position.PositionStatusProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getPositionStatus = function() {
  return /** @type {!proto.fintekkers.models.position.PositionStatusProto} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {!proto.fintekkers.models.position.PositionStatusProto} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.setPositionStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 25, value);
};


/**
 * optional string trade_name = 26;
 * @return {string}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getTradeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.setTradeName = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional fintekkers.models.strategy.StrategyAllocationProto strategy_allocation = 27;
 * @return {?proto.fintekkers.models.strategy.StrategyAllocationProto}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getStrategyAllocation = function() {
  return /** @type{?proto.fintekkers.models.strategy.StrategyAllocationProto} */ (
    jspb.Message.getWrapperField(this, proto.fintekkers.models.strategy.StrategyAllocationProto, 27));
};


/**
 * @param {?proto.fintekkers.models.strategy.StrategyAllocationProto|undefined} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
*/
proto.fintekkers.models.transaction.TransactionProto.prototype.setStrategyAllocation = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.clearStrategyAllocation = function() {
  return this.setStrategyAllocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.hasStrategyAllocation = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional bool is_cancelled = 30;
 * @return {boolean}
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.getIsCancelled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.fintekkers.models.transaction.TransactionProto} returns this
 */
proto.fintekkers.models.transaction.TransactionProto.prototype.setIsCancelled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 30, value);
};


