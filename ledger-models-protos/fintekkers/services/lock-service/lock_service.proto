syntax = "proto3";

package fintekkers.services.lock_service;

import "google/protobuf/empty.proto";

import "fintekkers/requests/util/lock/lock_request.proto";
import "fintekkers/requests/util/lock/lock_response.proto";

import "fintekkers/models/util/lock/node_partition.proto";
import "fintekkers/models/util/lock/node_state.proto";

option java_generic_services = true;


message NamespaceList {
    repeated string namespaces = 1;
}

message PartitionsList {
    repeated fintekkers.models.util.lock.NodePartition partitions = 1;
}

message NodeStateList {
    repeated fintekkers.models.util.lock.NodeState nodes = 1;
}

message CreateNamespaceRequest {
    string name = 1;
}

message CreatePartitionRequest {
    string name = 1;
    int32 partition = 2;
}

service Lock {
    // Allows a Fintekkers service to claim the lock for a partition. 
    // See {fintekkers.request.util.lock.LockRequestProto} for details
    rpc ClaimLock (fintekkers.requests.util.lock.LockRequestProto) returns (fintekkers.requests.util.lock.LockResponseProto);

    //Streams any change in lock owner for any namespace/partition to the subscriber. 
    //Heartbeat updates are not streamed to subscribers. If a subsciber wants to build an in-memory cache of parition state
    //they should first subscribe to lock updates, then query the G
    rpc SubscribeToLockUpdates (google.protobuf.Empty) returns (stream fintekkers.models.util.lock.NodeState);

    //Create a namespace
    rpc CreateNamespace (CreateNamespaceRequest) returns (google.protobuf.Empty);

    //Create a partition
    rpc CreatePartition (CreatePartitionRequest) returns (google.protobuf.Empty);

    //Lists the possible namespaces
    rpc ListNamespaces (google.protobuf.Empty) returns (NamespaceList);

    //Lists all partitions for the given list of namespaces
    rpc ListPartitions (NamespaceList) returns (PartitionsList);

    //Returns the current status of all nodes, across all namespaces and partitions.
    rpc GetAllPartitionStatus (google.protobuf.Empty) returns (NodeStateList);

    //Returns the current status of all nodes, across all namespaces and partitions.
    rpc GetAllPartitionStatusForNamespaces (NamespaceList) returns (NodeStateList);

    //In namespace / parition
    rpc GetPartitionStatus (fintekkers.models.util.lock.NodePartition) returns (fintekkers.models.util.lock.NodeState);
}

