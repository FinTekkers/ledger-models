syntax = "proto3";

package fintekkers.models.position;

import "google/protobuf/any.proto";
import "fintekkers/models/position/field.proto";
import "fintekkers/models/position/measure.proto";

import "fintekkers/models/util/decimal_value.proto";

option java_multiple_files = true;

option java_outer_classname = "PositionUtilProtos";

message MeasureMapEntry {
  MeasureProto measure = 1;
  fintekkers.models.util.DecimalValueProto measure_decimal_value = 2;
}

message FieldMapEntry {
  FieldProto field = 1;

  oneof FieldMapValueOneOf {
    google.protobuf.Any field_value_packed = 4; //If the field is a 'complex' proto type (e.g. a full enum) we serialize the enum and wrap it in an Any. You can think of the Any as a string describing the type, and a binary of the proto itself
    int32 enum_value = 5; //If the field is an enum type, then we use the number to denote which value it is
    string string_value = 6; //If the field is a string type, we just serialize the string (packing has an overhead)
  }

  PositionFilterOperator operator = 20; //Used for position filters, but not for responses
}

enum PositionFilterOperator {
    UNKNOWN_OPERATOR=0;EQUALS=1; NOT_EQUALS=2; LESS_THAN=3; LESS_THAN_OR_EQUALS=4; MORE_THAN=5 ; MORE_THAN_OR_EQUALS=6;
}